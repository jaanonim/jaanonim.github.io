---
export interface Props {
    text: string;
    hoverOnly?: boolean;
}

const { text, hoverOnly = false } = Astro.props;
---

<span
    class={hoverOnly ? "animated-text-hover" : "animated-text"}
    data-value={text}>{text}</span
>

<style lang="sass">
    @use '../styles/colors.sass'

    .animated-text
        display: inline
        background: -webkit-linear-gradient(135deg, colors.$font-color, colors.$primary)
        -webkit-background-clip: text
        -webkit-text-fill-color: transparent

    .animated-text-hover
        display: inline
        color: colors.$font-color
        &:hover
            background: -webkit-linear-gradient(135deg, colors.$font-color, colors.$primary)
            -webkit-background-clip: text
            -webkit-text-fill-color: transparent
</style>

<script>
    const letters = "abcdefghijklmnopqrstuvwxyz1234567890";
    const texts = document.querySelectorAll(".animated-text");
    texts.forEach((ele: HTMLElement) => {
        ele.onmouseover = (e) => {
            console.log("ok");
            const element = e.target as HTMLElement;
            const innerText = element.innerText;
            let iter = 0;

            const interval = setInterval(() => {
                element.innerText = innerText
                    .split("")
                    .map((_, i) => {
                        if (i < iter)
                            return (element.dataset.value as string)[i];
                        return letters[
                            Math.floor(Math.random() * letters.length)
                        ];
                    })
                    .join("");
                if (iter >= innerText.length) clearInterval(interval);
                iter += 1 / 3;
            }, 30);
        };
    });
</script>
